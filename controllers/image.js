// В данном случае контроллер состоит из одной функции, которая сохраняет полученный файл
module.exports = (req,res) => {
	// Поскольку в app.js мы подключили app.use(fileUpload()), у req доступно свойство req.files
	// В нем содержатся все файлы, переданные в форме запроса
	// В данном случае мы принимаем файл с именем "file"
	if(!req.files || !req.files.file) return res.send({error:'file was not sent'});

	let file = req.files.file;

	// Проверяем тип файла
	if(!/image\/(jpe?g|png)/.test(file.mimetype)) {
		return res.send("Файл должен быть формата jpeg или png!");
	}

	// Сохраняем файл по указанному адресу
	file.mv('images/'+file.name,(err) => {
		if(err) return res.status(500).send(err);
		res.send({response:'/images/'+file.name});
	});
}

/*
	Это довольно простой пример.
	В серьезном приложении необходимо создать таблицу в базе данных, где хранить всю информацию о файлах.
	И файл надо сохранять под именем, соответствующим id записи в таблице.
	Для этого потребуется создать модель, в которой будет описано взаимодействие как с таблицей, так и с файлом.
	А здесь в контроллере оставить только обработку ввода.
*/
